<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="BullsCowsTest" tests="1" skipped="0" failures="1" errors="0" timestamp="2024-02-19T22:14:19" hostname="DESKTOP-540C16A" time="0.091">
  <properties/>
  <testcase name="start" classname="BullsCowsTest" time="0.091">
    <failure message="java.lang.AssertionError: Wrong answer in test #1&#10;&#10;The game has no answer or more than one.&#10;&#10;Please find below the output of your program during this failed test.&#10;Note that the '&gt;' character indicates the beginning of the input line.&#10;&#10;---&#10;&#10;Input the length of the secret code:&#10;&gt; 1&#10;Input the number of possible symbols in the code:&#10;&gt; 10&#10;The secret is prepared: * (0-9, a-z)&#10;Okay, let's start a game!&#10;Turn 1:&#10;&gt; 0&#10;Grade: None.&#10;Turn 2:&#10;&gt; 1&#10;Grade: None.&#10;Turn 3:&#10;&gt; 2&#10;Grade: None.&#10;Turn 4:&#10;&gt; 3&#10;Grade: None.&#10;Turn 5:&#10;&gt; 4&#10;Grade: None.&#10;Turn 6:&#10;&gt; 5&#10;Grade: None.&#10;Turn 7:&#10;&gt; 6&#10;Grade: None.&#10;Turn 8:&#10;&gt; 7&#10;Grade: None.&#10;Turn 9:&#10;&gt; 8&#10;Grade: None.&#10;Turn 10:&#10;&gt; 9&#10;Grade: None.&#10;Turn 11:" type="java.lang.AssertionError">java.lang.AssertionError: Wrong answer in test #1

The game has no answer or more than one.

Please find below the output of your program during this failed test.
Note that the '&gt;' character indicates the beginning of the input line.

---

Input the length of the secret code:
&gt; 1
Input the number of possible symbols in the code:
&gt; 10
The secret is prepared: * (0-9, a-z)
Okay, let's start a game!
Turn 1:
&gt; 0
Grade: None.
Turn 2:
&gt; 1
Grade: None.
Turn 3:
&gt; 2
Grade: None.
Turn 4:
&gt; 3
Grade: None.
Turn 5:
&gt; 4
Grade: None.
Turn 6:
&gt; 5
Grade: None.
Turn 7:
&gt; 6
Grade: None.
Turn 8:
&gt; 7
Grade: None.
Turn 9:
&gt; 8
Grade: None.
Turn 10:
&gt; 9
Grade: None.
Turn 11:
	at org.junit.Assert.fail(Assert.java:89)
	at org.hyperskill.hstest.stage.StageTest.start(StageTest.java:203)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38)
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.processTestClass(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$2.run(TestWorker.java:176)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:133)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:71)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
</failure>
  </testcase>
  <system-out><![CDATA[?[1;31m
Start test 1?[0m
Input the length of the secret code:
> 1
Input the number of possible symbols in the code:
> 10
The secret is prepared: * (0-9, a-z)
Okay, let's start a game!
Turn 1:
> 0
Grade: None.
Turn 2:
> 1
Grade: None.
Turn 3:
> 2
Grade: None.
Turn 4:
> 3
Grade: None.
Turn 5:
> 4
Grade: None.
Turn 6:
> 5
Grade: None.
Turn 7:
> 6
Grade: None.
Turn 8:
> 7
Grade: None.
Turn 9:
> 8
Grade: None.
Turn 10:
> 9
Grade: None.
Turn 11:
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
